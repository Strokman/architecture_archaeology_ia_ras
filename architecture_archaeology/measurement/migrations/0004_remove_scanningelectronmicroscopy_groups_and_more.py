# Generated by Django 5.0 on 2024-01-06 14:46

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('helpers', '0014_mineral'),
        ('measurement', '0003_alter_rfa_material_scanningelectronmicroscopy'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='scanningelectronmicroscopy',
            name='groups',
        ),
        migrations.RemoveField(
            model_name='scanningelectronmicroscopy',
            name='method',
        ),
        migrations.CreateModel(
            name='GasChromatographyMassSpectrometry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('slug', models.SlugField(max_length=500, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время последнего изменения')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('measurement_date', models.DateField(verbose_name='Дата исследования')),
                ('material', models.CharField(choices=[('CL', 'красочный слой'), ('P', 'штукатурка'), ('C', 'раствор')], max_length=100)),
                ('operator', models.CharField(max_length=255, verbose_name='Оператор')),
                ('equipment', models.CharField(max_length=255, verbose_name='Оборудование')),
                ('conditions', models.CharField(max_length=255, verbose_name='Условия')),
                ('comment', models.TextField(null=True, verbose_name='Примечание')),
                ('additional_elements', models.CharField(max_length=255, verbose_name='Дополнительные выявленные соединения')),
                ('source', models.CharField(max_length=255, verbose_name='Источник референсных значений')),
                ('color', models.ManyToManyField(to='helpers.color', verbose_name='Цвета')),
                ('pigment', models.ManyToManyField(to='helpers.pigment', verbose_name='Пигменты')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InfraredRamanMicroscopy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('slug', models.SlugField(max_length=500, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время последнего изменения')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('measurement_date', models.DateField(verbose_name='Дата исследования')),
                ('material', models.CharField(choices=[('CL', 'красочный слой'), ('P', 'штукатурка'), ('C', 'раствор')], max_length=100)),
                ('operator', models.CharField(max_length=255, verbose_name='Оператор')),
                ('equipment', models.CharField(max_length=255, verbose_name='Оборудование')),
                ('conditions', models.CharField(max_length=255, verbose_name='Условия')),
                ('comment', models.TextField(null=True, verbose_name='Примечание')),
                ('additional_elements', models.CharField(max_length=255, verbose_name='Дополнительные выявленные соединения')),
                ('source', models.CharField(max_length=255, verbose_name='Источник референсных значений')),
                ('method', models.CharField(choices=[('IR', 'ИК спектроскопия'), ('RS', 'рамановская спектроскопия')], max_length=255, null=True, verbose_name='Метод')),
                ('groups', models.CharField(max_length=255, null=True, verbose_name='Функциональные группы и соединения')),
                ('color', models.ManyToManyField(to='helpers.color', verbose_name='Цвета')),
                ('pigment', models.ManyToManyField(to='helpers.pigment', verbose_name='Пигменты')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Roentgen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('slug', models.SlugField(max_length=500, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время последнего изменения')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('measurement_date', models.DateField(verbose_name='Дата исследования')),
                ('material', models.CharField(choices=[('CL', 'красочный слой'), ('P', 'штукатурка'), ('C', 'раствор')], max_length=100)),
                ('operator', models.CharField(max_length=255, verbose_name='Оператор')),
                ('equipment', models.CharField(max_length=255, verbose_name='Оборудование')),
                ('conditions', models.CharField(max_length=255, verbose_name='Условия')),
                ('comment', models.TextField(null=True, verbose_name='Примечание')),
                ('additional_elements', models.CharField(max_length=255, verbose_name='Дополнительные выявленные соединения')),
                ('source', models.CharField(max_length=255, verbose_name='Источник референсных значений')),
                ('color', models.ManyToManyField(to='helpers.color', verbose_name='Цвета')),
                ('mineral', models.ManyToManyField(to='helpers.mineral', verbose_name='Минералы')),
                ('pigment', models.ManyToManyField(to='helpers.pigment', verbose_name='Пигменты')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
